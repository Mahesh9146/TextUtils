{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","title","onClick","togglemode","htmlFor","TextForm","useState","text","setText","heading","rows","value","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","Select","navigator","clipboard","writeText","split","filter","element","lenght","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4NAGe,SAASA,EAAMC,GAK5B,IAAIC,EAAU,CACZC,MAAsB,SAAfF,EAAMG,KAAkB,QAAU,UACzCC,gBAAgC,SAAfJ,EAAMG,KAAkB,UAAY,SAGvD,OACE,sBAAKE,UAAU,aAAaC,MAAOL,EAAnC,UACE,oBAAII,UAAU,iBAAd,sBACA,sBAAKA,UAAU,YAAYC,MAAOL,EAASM,GAAG,mBAA9C,UACE,sBAAKF,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBE,GAAG,aAApC,SACE,wBACEF,UAAU,mBACVG,KAAK,SACL,iBAAe,WACf,iBAAe,eACf,gBAAc,OACd,gBAAc,cACdF,MAAOL,EAPT,SASE,2DAGJ,qBACEM,GAAG,cACHF,UAAU,mCACV,kBAAgB,aAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBC,MAAOL,EAAvC,4IAMJ,sBAAKI,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBE,GAAG,aAApC,SACE,wBACEF,UAAU,6BACVG,KAAK,SACL,iBAAe,WACf,iBAAe,eACf,gBAAc,QACd,gBAAc,cACdF,MAAOL,EAPT,SASE,qDAGJ,qBACEM,GAAG,cACHF,UAAU,8BACV,kBAAgB,aAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBC,MAAOL,EAAvC,0QASJ,sBAAKI,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBE,GAAG,eAApC,SACE,wBACEF,UAAU,6BACVG,KAAK,SACL,iBAAe,WACf,iBAAe,iBACf,gBAAc,QACd,gBAAc,gBACdF,MAAOL,EAPT,SASE,4DAGJ,qBACEM,GAAG,gBACHF,UAAU,8BACV,kBAAgB,eAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBC,MAAOL,EAAvC,mOASN,qBAAKI,UAAU,sB,WCjGN,SAASI,EAAOT,GAC7B,OACE,qBACEK,UAAS,yCAAoCL,EAAMG,KAA1C,eAAqDH,EAAMG,MADtE,SAGE,sBAAKE,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeK,GAAG,IAAlC,SACGV,EAAMW,QAET,wBACEN,UAAU,iBACVG,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BE,GAAG,yBAA7C,UACE,qBAAIF,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOK,GAAG,IAAzD,oBAIF,oBAAIL,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWK,GAAG,SAA9B,SACGV,EAAMD,aAeb,sBACEM,UAAS,sCACQ,UAAfL,EAAMG,KAAmB,OAAS,SAFtC,UAKE,uBACEE,UAAU,mBACVG,KAAK,WACLD,GAAG,yBACHK,QAASZ,EAAMa,aAEjB,uBACER,UAAU,mBACVS,QAAQ,yBAFV,uCCzDG,SAASC,EAASf,GAC/B,IAyBA,EAAwBgB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACE,qCACE,8BACE,sBACEb,UAAU,OACVC,MAAO,CAAEJ,MAAsB,SAAfF,EAAMG,KAAkB,QAAU,WAFpD,UAIE,uBAAOW,QAAQ,SAAST,UAAU,aAAlC,SACE,6BAAKL,EAAMmB,YAEb,0BACEd,UAAU,gBACVE,GAAG,QACHa,KAAK,IACLC,MAAOJ,EACPK,SA1Ba,SAACC,GACtBL,EAAQK,EAAMC,OAAOH,QA0Bbf,MAAO,CACLF,gBAAgC,SAAfJ,EAAMG,KAAkB,UAAY,QACrDD,MAAsB,SAAfF,EAAMG,KAAkB,QAAU,aAG7C,wBACEsB,SAA0B,IAAhBR,EAAKS,OACfrB,UAAU,4BACVO,QAlDY,WACpB,IAAIe,EAAUV,EAAKW,cACnBV,EAAQS,GACR3B,EAAM6B,UAAU,uCAAwC,YA4ClD,gCAOA,wBACEJ,SAA0B,IAAhBR,EAAKS,OACfrB,UAAU,4BACVO,QApDa,WACrB,IAAIe,EAAUV,EAAKa,cACnBZ,EAAQS,GACR3B,EAAM6B,UAAU,uCAAwC,YA8ClD,gCAOA,wBACEJ,SAA0B,IAAhBR,EAAKS,OACfrB,UAAU,4BACVO,QAtDe,WAEvBM,EADc,IAEdlB,EAAM6B,UAAU,wBAAyB,YAgDnC,uBAOA,wBACEJ,SAA0B,IAAhBR,EAAKS,OACfrB,UAAU,4BACVO,QArDS,WACjB,IAAIK,EAAOc,SAASC,eAAe,SACnCf,EAAKgB,SACLC,UAAUC,UAAUC,UAAUnB,EAAKI,OACnCrB,EAAM6B,UAAU,uBAAwB,YA8ClC,2BASJ,sBACExB,UAAU,iBACVC,MAAO,CAAEJ,MAAsB,SAAfF,EAAMG,KAAkB,QAAU,WAFpD,UAIE,mDACA,8BAEIc,EAAKoB,MAAM,OAAOC,QAAO,SAACC,GACxB,OAA0B,IAAnBA,EAAQb,UACdA,OACH,IALJ,YAOGT,EAAKS,OAPR,iBASA,8BAAI,KAAQT,EAAKoB,MAAM,KAAKX,OAA5B,sBACA,yCACA,4BAAIT,EAAKuB,OAAS,EAAIvB,EAAO,6BC1EtBwB,MApBf,SAAezC,GAMb,OACE,qBAAKM,MAAO,CAAEoC,OAAQ,QAAtB,SACG1C,EAAM2C,OACL,sBACEtC,UAAS,sBAAiBL,EAAM2C,MAAMnC,KAA7B,gCACToC,KAAK,QAFP,UAIE,iCAZW,SAACC,GAClB,IAAMC,EAAQD,EAAKf,cACnB,OAAOgB,EAAMC,OAAO,GAAGnB,cAAgBkB,EAAME,MAAM,GAUpCC,CAAWjD,EAAM2C,MAAMnC,QAJlC,MAIqDR,EAAM2C,MAAMO,U,OCuD1DC,MA9Df,WACE,MAAwBnC,mBAAS,SAAjC,mBAAOb,EAAP,KAAaiD,EAAb,KACA,EAA0BpC,mBAAS,MAAnC,mBAAO2B,EAAP,KAAcU,EAAd,KAEMxB,EAAY,SAACyB,EAAS9C,GAC1B6C,EAAS,CACPH,IAAKI,EACL9C,KAAMA,IAER+C,YAAW,WACTF,EAAS,QACR,MAqBL,OACE,mCACE,eAAC,IAAD,WAEE,cAAC5C,EAAD,CACEE,MAAM,YACNZ,MAAM,QACNI,KAAMA,EACNU,WA3BW,WACJ,UAATV,GACFiD,EAAQ,QACRrB,SAASyB,KAAKlD,MAAMF,gBAAkB,UACtCyB,EAAU,6BAA8B,aASxCuB,EAAQ,SACRrB,SAASyB,KAAKlD,MAAMF,gBAAkB,QACtCyB,EAAU,8BAA+B,eAcvC,cAAC,EAAD,CAAOc,MAAOA,IACd,qBAAKtC,UAAU,gBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC3D,EAAD,CAAOI,KAAMA,MAEf,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC3C,EAAD,CACEI,QAAQ,2CACRhB,KAAMA,EACN0B,UAAWA,iBChDZ8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAM1B2B,M","file":"static/js/main.92f407c5.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { useState } from \"react/cjs/react.development\";\r\n\r\nexport default function About(props) {\r\n  // const [myStyle, setMyStyle] = useState({\r\n  //   color: \"black\",\r\n  //   backgroundColor: \"white\",\r\n  // });\r\n  let myStyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n    backgroundColor: props.mode === \"dark\" ? \"#042743\" : \"white\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"container \" style={myStyle}>\r\n      <h1 className=\"container my-3\">About Us</h1>\r\n      <div className=\"accordion\" style={myStyle} id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Analyze your text</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              textutils gives you a way to analyze your text quickly and\r\n              efficiently. it counts words,characters,you can copy your text\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Free to use</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              TextUtils is a free character counter tool that provides instant\r\n              character count and word count statistics for a given\r\n              text.Textutils report number of words and characters in the\r\n              text.thus it is suitable for writing word and characters with\r\n              limit.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Browser compatible</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              This word counter software works in any browsers such as\r\n              chrome,mozilla firebox,microsoft edge,internet explorer,safari.it\r\n              suits to count characters in facebook,instagram,blog,books,pdf\r\n              document,essays,etc\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"#\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"#\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.About}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.togglemode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              EnableDarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  About: PropTypes.string,\r\n};\r\n\r\n// Navbar.defaultProps = {\r\n//   title: \"Setyourtitlehere\",\r\n//   About: \"aboutme\",\r\n// };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"your text is converted to uppercase!\", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"your text is converted to lowercase!\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"your text is cleared!\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.Select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"your text is copied!\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div>\r\n        <div\r\n          className=\"my-3\"\r\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n        >\r\n          <label htmlFor=\"myBox \" className=\"form-label\">\r\n            <h2>{props.heading}</h2>\r\n          </label>\r\n          <textarea\r\n            className=\"form-control \"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#13466e\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n          ></textarea>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary my-2 mx-1\"\r\n            onClick={handleUpClick}\r\n          >\r\n            ConvertToUppercase\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary mx-1 my-1\"\r\n            onClick={handleLowClick}\r\n          >\r\n            ConvertToLowercase\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary mx-1 my-1\"\r\n            onClick={handleClearClick}\r\n          >\r\n            ClearText\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary mx-1 my-1\"\r\n            onClick={handleCopy}\r\n          >\r\n            CopyText\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h2>Your Text summary</h2>\r\n        <p>\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and\r\n          {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.lenght > 0 ? text : \"Nothing to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = \"Textutils-Dark Mode\";\n      // setInterval(() => {\n      //   document.title ='install textutils is amazing'\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title ='install textutils '\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = \"Textutils-Light Mode\";\n    }\n  };\n  return (\n    <>\n      <Router>\n        {/* <Navbar /> */}\n        <Navbar\n          title=\"Textutils\"\n          About=\"About\"\n          mode={mode}\n          togglemode={togglemode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm\n                heading=\"TextUtils-Word Counter,Character Counter\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}